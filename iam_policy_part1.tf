resource "aws_iam_policy" "firefly_readonly_policy_part1" {
  name        = "FireflyReadonlyPolicy_part1"
  path        = "/"
  description = "Read only permission for the cloud configuration Part1"

  policy = jsonencode({
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Action" : [
          "access-analyzer:GetAnalyzer",
          "access-analyzer:List*",
          "account:GetAlternateContact",
          "account:List*",
          "acm:DescribeCertificate",
          "acm:List*",
          "airflow:GetEnvironment",
          "airflow:List*",
          "amplify:GetApp",
          "amplify:GetBackendEnvironment",
          "amplify:GetBranch",
          "amplify:GetDomainAssociation",
          "amplify:GetWebHook",
          "amplify:List*",
          "apigateway:GET",
          "app-integrations:List*",
          "appconfig:GetApplication",
          "appconfig:GetConfigurationProfile",
          "appconfig:GetDeployment",
          "appconfig:GetDeploymentStrategy",
          "appconfig:GetEnvironment",
          "appconfig:GetHostedConfigurationVersion",
          "appconfig:List*",
          "appflow:Describe*",
          "appflow:List*",
          "application-autoscaling:Describe*",
          "appmesh:Describe*",
          "appmesh:List*",
          "apprunner:Describe*",
          "apprunner:List*",
          "appstream:Describe*",
          "appstream:List*",
          "appsync:GetApiAssociation",
          "appsync:GetApiCache",
          "appsync:GetDataSource",
          "appsync:GetDomainName",
          "appsync:GetFunction",
          "appsync:GetGraphqlApi",
          "appsync:GetResolver",
          "appsync:GetSchemaCreationStatus",
          "appsync:List*",
          "aps:Describe*",
          "aps:List*",
          "athena:GetDatabase",
          "athena:GetNamedQuery",
          "athena:GetWorkGroup",
          "athena:ListDatabases",
          "athena:ListEngineVersions",
          "athena:ListNamedQueries",
          "athena:ListTagsForResource",
          "athena:ListWorkGroups",
          "autoscaling-plans:Describe*",
          "autoscaling:Describe*",
          "backup-gateway:List*",
          "backup:Describe*",
          "backup:GetBackupPlan",
          "backup:GetBackupSelection",
          "backup:GetBackupVaultAccessPolicy",
          "backup:GetBackupVaultNotifications",
          "backup:List*",
          "batch:Describe*",
          "batch:List*",
          "budgets:Describe*",
          "chime:GetVoiceConnector",
          "chime:GetVoiceConnectorGroup",
          "chime:GetVoiceConnectorLoggingConfiguration",
          "chime:GetVoiceConnectorOrigination",
          "chime:GetVoiceConnectorStreamingConfiguration",
          "chime:GetVoiceConnectorTermination",
          "chime:ListTagsForResource",
          "chime:ListVoiceConnector*",
          "cloud9:Describe*",
          "cloud9:List*",
          "cloudformation:Describe*",
          "cloudformation:GetResource",
          "cloudformation:GetResourceRequestStatus",
          "cloudformation:GetTemplate",
          "cloudformation:List*",
          "cloudfront:Describe*",
          "cloudfront:GetCachePolicy",
          "cloudfront:GetCloudFrontOriginAccessIdentity",
          "cloudfront:GetDistribution",
          "cloudfront:GetFieldLevelEncryptionConfig",
          "cloudfront:GetFieldLevelEncryptionProfile",
          "cloudfront:GetFunction",
          "cloudfront:GetKeyGroup",
          "cloudfront:GetMonitoringSubscription",
          "cloudfront:GetOriginRequestPolicy",
          "cloudfront:GetPublicKey",
          "cloudfront:GetRealtimeLogConfig",
          "cloudfront:GetResponseHeadersPolicy",
          "cloudfront:List*",
          "cloudhsm:Describe*",
          "cloudhsm:List*",
          "cloudsearch:Describe*",
          "cloudsearch:List*",
          "cloudtrail:Describe*",
          "cloudtrail:GetEventDataStore",
          "cloudtrail:GetEventSelectors",
          "cloudtrail:GetInsightSelectors",
          "cloudtrail:GetTrailStatus",
          "cloudtrail:List*",
          "cloudwatch:DescribeAlarms",
          "codeartifact:Describe*",
          "codeartifact:GetDomainPermissionsPolicy",
          "codeartifact:GetRepositoryPermissionsPolicy",
          "codeartifact:List*",
          "codebuild:Describe*",
          "codebuild:GetResourcePolicy",
          "codebuild:List*",
          "codecommit:Describe*",
          "codecommit:GetApprovalRuleTemplate",
          "codecommit:GetRepository",
          "codecommit:GetRepositoryTriggers",
          "codecommit:List*",
          "codedeploy:List*",
          "codeguru-profiler:DescribeProfilingGroup",
          "codeguru-profiler:List*",
          "codeguru-reviewer:Describe*",
          "codeguru-reviewer:List*",
          "codepipeline:GetPipeline",
          "codepipeline:List*",
          "codestar-connections:GetConnection",
          "codestar-connections:GetHost",
          "codestar-connections:List*",
          "codestar-notifications:Describe*",
          "codestar-notifications:List*",
          "codestar:Describe*",
          "codestar:List*",
          "cognito-identity:Describe*",
          "cognito-identity:GetIdentityPoolRoles",
          "cognito-identity:GetPrincipalTagAttributeMap",
          "cognito-identity:List*",
          "cognito-idp:Describe*",
          "cognito-idp:List*",
          "cognito-sync:Describe*",
          "cognito-sync:List*"
        ],
        "Effect" : "Allow",
        "Resource" : "*"
      }
    ]
  })
}