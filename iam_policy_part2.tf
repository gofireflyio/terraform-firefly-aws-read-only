resource "aws_iam_policy" "firefly_readonly_policy_part2" {
  name        = "FireflyReadonlyPolicy_part2"
  path        = "/"
  description = "Read only permission for the cloud configuration Part2"

  policy = jsonencode({
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Action" : [
          "comprehend:Describe*",
          "comprehend:List*",
          "comprehendmedical:Describe*",
          "comprehendmedical:List*",
          "compute-optimizer:Describe*",
          "config:Describe*",
          "config:GetOrganizationConfigRuleDetailedStatus",
          "config:GetOrganizationConformancePackDetailedStatus",
          "config:List*",
          "connect:Describe*",
          "connect:List*",
          "cur:DescribeReportDefinitions",
          "databrew:Describe*",
          "databrew:List*",
          "dataexchange:GetDataSet",
          "dataexchange:GetRevision",
          "dataexchange:List*",
          "datapipeline:Describe*",
          "datapipeline:GetPipelineDefinition",
          "datapipeline:List*",
          "datasync:Describe*",
          "datasync:List*",
          "dax:Describe*",
          "dax:List*",
          "detective:List*",
          "devicefarm:GetDevicePool",
          "devicefarm:GetInstanceProfile",
          "devicefarm:GetNetworkProfile",
          "devicefarm:GetProject",
          "devicefarm:GetTestGridProject",
          "devicefarm:GetUpload",
          "devicefarm:List*",
          "devops-guru:Describe*",
          "devops-guru:List*",
          "directconnect:Describe*",
          "directconnect:List*",
          "discovery:Describe*",
          "discovery:List*",
          "dlm:GetLifecyclePolicies",
          "dlm:GetLifecyclePolicy",
          "dlm:List*",
          "dms:Describe*",
          "dms:List*",
          "ds:DescribeClientAuthenticationSettings",
          "ds:DescribeConditionalForwarders",
          "ds:DescribeDirectories",
          "ds:DescribeDomainControllers",
          "ds:DescribeEventTopics",
          "ds:DescribeLDAPSSettings",
          "ds:DescribeRegions",
          "ds:DescribeSharedDirectories",
          "ds:DescribeSnapshots",
          "ds:DescribeTrusts",
          "ds:ListIpRoutes",
          "ds:ListLogSubscriptions",
          "ds:ListSchemaExtensions",
          "ds:ListTagsForResource",
          "dynamodb:DescribeBackup",
          "dynamodb:DescribeContinuousBackups",
          "dynamodb:DescribeContributorInsights",
          "dynamodb:DescribeExport",
          "dynamodb:DescribeGlobalTable",
          "dynamodb:DescribeGlobalTableSettings",
          "dynamodb:DescribeKinesisStreamingDestination",
          "dynamodb:DescribeLimits",
          "dynamodb:DescribeStream",
          "dynamodb:DescribeTable",
          "dynamodb:DescribeTableReplicaAutoScaling",
          "dynamodb:DescribeTimeToLive",
          "dynamodb:GetItem",
          "dynamodb:ListBackups",
          "dynamodb:ListContributorInsights",
          "dynamodb:ListExports",
          "dynamodb:ListGlobalTables",
          "dynamodb:ListStreams",
          "dynamodb:ListTables",
          "dynamodb:ListTagsOfResource",
          "ebs:ListChangedBlocks",
          "ebs:ListSnapshotBlocks",
          "ec2:Describe*",
          "ec2:GetEbsDefaultKmsKeyId",
          "ec2:GetEbsEncryptionByDefault",
          "ec2:GetIpamPoolAllocations",
          "ec2:GetIpamPoolCidrs",
          "ec2:GetPasswordData",
          "ec2:GetSerialConsoleAccessStatus",
          "ec2:GetSubnetCidrReservations",
          "ec2:GetTransitGatewayRouteTableAssociations",
          "ec2:ListSnapshotsInRecycleBin",
          "ecr-public:DescribeImageTags",
          "ecr-public:DescribeImages",
          "ecr-public:DescribeRegistries",
          "ecr-public:DescribeRepositories",
          "ecr-public:GetRepositoryCatalogData",
          "ecr-public:GetRepositoryPolicy",
          "ecr-public:ListTagsForResource",
          "ecr:DescribeImageReplicationStatus",
          "ecr:DescribeImageScanFindings",
          "ecr:DescribeImages",
          "ecr:DescribePullThroughCacheRules",
          "ecr:DescribeRegistry",
          "ecr:DescribeRepositories",
          "ecr:GetLifecyclePolicy",
          "ecr:GetRegistryPolicy",
          "ecr:GetRegistryScanningConfiguration",
          "ecr:GetRepositoryPolicy",
          "ecr:ListImages",
          "ecr:ListTagsForResource",
          "ecs:DescribeCapacityProviders",
          "ecs:DescribeClusters",
          "ecs:DescribeContainerInstances",
          "ecs:DescribeServices",
          "ecs:DescribeTaskDefinition",
          "ecs:DescribeTaskSets",
          "ecs:DescribeTasks",
          "ecs:ListAccountSettings",
          "ecs:ListAttributes",
          "ecs:ListClusters",
          "ecs:ListContainerInstances",
          "ecs:ListServices",
          "ecs:ListTagsForResource",
          "ecs:ListTaskDefinitionFamilies",
          "ecs:ListTaskDefinitions",
          "ecs:ListTasks",
          "eks:DescribeAddon",
          "eks:DescribeAddonVersions",
          "eks:DescribeCluster",
          "eks:DescribeFargateProfile",
          "eks:DescribeIdentityProviderConfig",
          "eks:DescribeNodegroup",
          "eks:DescribeUpdate",
          "eks:ListAddons",
          "eks:ListClusters",
          "eks:ListFargateProfiles",
          "eks:ListIdentityProviderConfigs",
          "eks:ListNodegroups",
          "eks:ListTagsForResource",
          "eks:ListUpdates",
        ],
        "Effect" : "Allow",
        "Resource" : "*"
      }
    ]
  })
}